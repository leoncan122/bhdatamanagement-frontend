import React, { useState, useEffect } from "react";
import Link from "next/link";
import Head from "next/head";
import { useUser, getSession, withPageAuthRequired } from "@auth0/nextjs-auth0";
import styles from "../styles/Home.module.css";
import { ToastContainer, toast } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";
import { Dropbox } from "dropbox";
import { useRouter } from 'next/router'

import Layout from "../components/Layout";
import Router from "next/router";
import Loader from "../components/Loader";

export default function Dashboard() {
  const { user, error, isLoading } = useUser();
  const [loading,setLoading]=useState(true)

  const loggedUserRole = user && user["https://lanuevatest.herokuapp.com/roles"];
  const loggedUserStatus = user && user["https://lanuevatest.herokuapp.com/activestatus"];
  const userId = user?.sub
  const router = useRouter()




  const notifyMessage = () => {
    toast.success("A new client is being created!", {
      position: toast.POSITION.TOP_CENTER,
    });
  };


    useEffect(()=>{
    loggedUserRole==="Supervisor" ? router.push("/supervisorDashboard"):setLoading(false)
    loggedUserStatus==="No Active" ? router.push("/api/auth/logout"):setLoading(false)
    },[loggedUserRole,loggedUserStatus])


  return (
    <>
      <ToastContainer autoClose={60000} />
      <Head>
        <title>Black Health</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Layout>
      <main className="bg-light-blue h-screen">
        <section id="dashboard-client-list">
          <div className="container mx-auto py-5">
            
            
            <h1 className="font-black py-5">
              Hello 
            </h1>
           
            

             
              {/* <div className="dashboard-clients-container grid md:grid-cols-5 grid.cols-1 md:px-0 px-5 gap-5">
               
            
          
              </div>  */}
           

           
            
          </div>
        </section>
      </main>
      </Layout>
      
    </>
  );
}

/* export const getServerSideProps = withPageAuthRequired(); */

export const getServerSideProps = withPageAuthRequired()